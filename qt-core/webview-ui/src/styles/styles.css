/*
Copyright (C) 2025 The Qt Company Ltd.
SPDX-License-Identifier: LicenseRef-Qt-Commercial OR LGPL-3.0-only 
*/

@import 'tailwindcss';

/* variables */
body {
  --qt-border-radius: 2px;
  --qt-border-guaranteed:
    var(--vscode-widget-border,
    var(--vscode-settings-headerBorder, 
    var(--vscode-focusBorder, darkgray)));
}

/* utilities */
@utility qt-border-radius {
  border-radius: var(--qt-border-radius);
}

@utility qt-focus-outline {
  outline: 1px solid var(--vscode-focusBorder);
  outline-offset: 2px;
  border-radius: var(--qt-border-radius);
}

@utility qt-focus-outlineFit {
  @apply qt-focus-outline;
  outline-offset: -1px;
}

@utility qt-clientArea {
  background-color: var(--vscode-input-background);
  border: 1px solid var(--vscode-widget-border, transparent);
  @apply qt-border-radius;
}

/* common */
html {
  font-size: var(--vscode-font-size);
  font-family: var(--vscode-font-family);
  font-weight: var(--vscode-font-weight);
}

/* label */
.qt-label {
  color: var(--vscode-foreground);
  margin: 2px;
}

.qt-label.highlight {
  color: var(--vscode-settings-headerForeground);
  font-size: 1.1rem;
  @apply font-semibold
}

.qt-label.dialog {
  color: var(--vscode-settings-headerForeground);
  font-size: 1.05rem;
}

/* button */
.qt-button-like {
  color: var(--vscode-button-foreground);
  background-color: var(--vscode-button-background);
  border: 1px solid var(--vscode-widget-border, transparent);
  line-height: normal;
  cursor: pointer;
  @apply text-base font-normal;
  @apply qt-border-radius;
}

.qt-button-like.flat {
  color: var(--vscode-foreground);
  background: transparent;
  border: 1px solid var(--qt-border-guaranteed);
}

.qt-button-like.borderless {
  color: var(--vscode-foreground);
  background: transparent;
  border: 1px solid transparent;
}

.qt-button-like:disabled {
  color: var(--vscode-foreground);
  background: transparent;
  border: 1px solid var(--qt-border-guaranteed);
  cursor: not-allowed;
}

.qt-button-like:hover {
  color: var(--vscode-button-foreground);
  background: var(--vscode-button-hoverBackground);
}

.qt-button-like.flat:hover {
  color: var(--vscode-button-foreground);
  background: var(--vscode-button-hoverBackground);
  border: 1px solid var(--vscode-widget-border, transparent);
}

.qt-button-like:focus,
.qt-button-like:focus-visible {
  @apply qt-focus-outline;
}

/* checkbox */
.qt-checkbox {
  color: var(--vscode-foreground);
  background: transparent;
  @apply text-base font-normal;
  @apply qt-border-radius;
}
 
.qt-checkbox > input[type='checkbox'] {
  position: relative;
  appearance: none;
  width: 1.5rem;
  height: 1.5rem;
  box-shadow: none;
}

.qt-checkbox > input[type='checkbox']::before {
  position: absolute;
  content: '';
  width: 1.5rem;
  height: 1.5rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 0.9rem;
  font-weight: bold;
  color:var(--vscode-settings-checkboxForeground);
  background: var(--vscode-settings-checkboxBackground);
  border: 1px solid var(--vscode-settings-checkboxBorder);
  @apply qt-border-radius;
  @apply flex items-center justify-center;
}

.qt-checkbox > input[type='checkbox']:checked::before {
  content: 'âœ“';
}

.qt-checkbox > input[type='checkbox']:focus,
.qt-checkbox > input[type='checkbox']:focus-visible {
   @apply qt-focus-outline;
}

.qt-checkbox > input[type='checkbox']:hover,
.qt-checkbox > input[type='checkbox']:hover::before {
  background: var(--vscode-button-hoverBackground, transparent);
}

/* input (text-field) */
.qt-input {
  color: var(--vscode-settings-textInputForeground, var(--vscode-input-foreground));
  background-color: var(--vscode-settings-textInputBackground, var(--vscode-input-background));
  border: 1px solid var(--vscode-settings-inputBorder, var(--vscode-input-border));
  padding: 5px 0px 5px 10px;
  box-shadow: none;
  @apply text-base;
  @apply qt-border-radius;
}

.qt-input:focus,
.qt-input:focus-visible {
  @apply qt-focus-outlineFit;
}

.qt-input.error {
  @apply qt-focus-outlineFit;
  outline: 1px solid var(--vscode-inputValidation-warningBorder);
}

.qt-input::selection {
  color: var(--vscode-foreground, var(--vscode-editor-selectionForeground));
  background-color: var(--vscode-selection-background, var(--vscode-editor-selectionBackground));
}

.qt-input-icon {
  color: var(--vscode-inputValidation-warningBorder);
  background-color: transparent;
  padding: 0px 5px;
  cursor: pointer;
}

body.vscode-high-contrast {
  .qt-input.error {
    @apply qt-focus-outlineFit;
    outline: 1px solid var(--vscode-focusBorder);
  }
}

/* list and list-item */
.qt-list {
  @apply qt-clientArea;
}

.qt-list:focus-within {
  @apply qt-focus-outlineFit;
}

.qt-list-item {
  color: var(--vscode-foreground);
  background-color: transparent;
  border-radius: 0px;
  border: 1px solid transparent;
  box-shadow: none;
  cursor: pointer;
  @apply text-base font-normal;
  @apply px-3 py-2;
}

.qt-list-item .qt-badge {
  background-color: transparent;
  font-size: 0.8rem;
}

.qt-list-item:hover {
  color: var(--vscode-list-hoverForeground, var(--vscode-foreground));
  background-color: var(--vscode-list-hoverBackground, transparent);
}

.qt-list-item.selected {
  color: var(--vscode-button-foreground);
  background-color: var(--vscode-button-background);
}

.qt-list-item:focus,
.qt-list-item:focus-visible {
  @apply qt-focus-outlineFit;
  border-radius: 0px;
}

body.vscode-high-contrast {
  .qt-list-item:hover {
    border: 1px dashed var(--vscode-focusBorder);
    background: none;
  }

  .qt-list-item.selected {
    border: 1px solid var(--vscode-widget-border);
  }
}

/* picker (combobox, menu, etc) */
.qt-picker-trigger {
  color: var(--vscode-dropdown-foreground);
  background-color: var(--vscode-dropdown-background);
  border-color: var(--vscode-settings-dropdownBorder);
  border-width: 1px;
  cursor: pointer;
  line-height: 2;
  font-weight: normal;
  box-shadow: none;
  @apply px-2;
  @apply qt-border-radius;
}

.qt-picker-trigger.active,
.qt-picker-trigger:hover {
  color:  var(--vscode-button-foreground);
  background-color: var(--vscode-button-background);
  border: 1px solid var(--vscode-widget-border, transparent);
}

.qt-picker-trigger:focus-visible {
  @apply qt-focus-outline;
}

/* display */
.qt-tooltip {
  color: var(--vscode-foreground);
  background: var(--vscode-input-background);
  border: 1px solid var(--qt-border-guaranteed);
  @apply px-4 py-2;
  @apply text-base font-normal;
  @apply qt-border-radius;
}

.qt-alert {
  opacity: 90%;
  color: var(--vscode-foreground);
  background-color: var(--vscode-inputValidation-warningBackground);
  border: 1px solid var(--vscode-inputValidation-warningBorder);
  padding: 10px;
  @apply text-base font-normal;
  @apply qt-border-radius;
}

.qt-alert:hover {
  opacity: 100%;
}

/* containers */
.qt-panel {
  color: var(--vscode-sideBar-foreground, var(--vscode-settings-headerBorder));
  background: var(--vscode-sideBar-background);
  border: 1px solid var(--vscode-widget-border, transparent);
  @apply qt-border-radius;
}

.qt-panel-header {
  color: var(--vscode-sideBarTitle-foreground);
  border: none;
  font-size: 1.4rem;
  @apply font-semibold;
}

.qt-popup {
  background: var(--vscode-sideBar-background);
  border: 1px solid var(--vscode-widget-border);
  border-radius: var(--qt-border-radius);
  @apply md:-translate-y-[50px];
  @apply shadow-lg;
}

.qt-popup-backdrop {
  @apply bg-white/5;
}
